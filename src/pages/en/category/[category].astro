---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { useTranslations, useTranslatedPath } from '../../../i18n/utils';

export async function getStaticPaths() {
	const images = await getCollection('images');
	const categories = [...new Set(images.flatMap(img => img.data.categories || []))];
	
	return categories.map((category) => ({
		params: { category },
		props: { category }
	}));
}

const { category } = Astro.props;
const t = useTranslations('en');
const translatePath = useTranslatedPath('en');
const { photos, categories: categoriesLabel, all } = t.category;

const images = await getCollection('images');
const categoryImages = images.filter(img => img.data.categories?.includes(category));
const allCategories = [...new Set(images.flatMap(img => img.data.categories || []))];
---

<Layout title={`${category} - ${photos}`}>
	<h1 class="text-4xl font-bold mb-8 text-center">{category}</h1>
	
	<section class="categories mb-8">
		<h2 class="text-2xl font-semibold mb-4">{categoriesLabel}</h2>
		<div class="flex flex-wrap gap-2">
			<a href={translatePath('/catalog')} class="px-4 py-2 rounded-lg transition-colors bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600">
				{all}
			</a>
			{allCategories.map((cat) => (
				<a href={translatePath(`/category/${cat}`)} class={`px-4 py-2 rounded-lg transition-colors ${cat === category ? 'bg-blue-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600'}`}>
					{cat}
				</a>
			))}
		</div>
	</section>

	<section class="gallery grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
		{categoryImages.map((image) => (
			<a href={translatePath(`/images/${image.slug}`)} class="block rounded-lg overflow-hidden bg-white dark:bg-zinc-800 hover:scale-105 transition-transform">
				<Image 
					src={image.data.image} 
					alt={image.data.title} 
					width={300} 
					height={300} 
					loading="lazy" 
					class="w-full h-64 object-cover"
				/>
				<div class="p-4">
					<h2 class="text-sm font-medium text-black dark:text-white mb-2">{image.data.title}</h2>
					{image.data.categories && (
						<div class="flex flex-wrap gap-1">
							{image.data.categories.map((cat) => (
								<span class="text-xs bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded">
									{cat}
								</span>
							))}
						</div>
					)}
				</div>
			</a>
		))}
	</section>
</Layout> 