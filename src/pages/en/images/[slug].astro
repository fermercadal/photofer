---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { useTranslations, useTranslatedPath } from '../../../i18n/utils';

export async function getStaticPaths() {
	const images = await getCollection('images');
	return images.map((image) => ({
		params: { slug: image.slug },
		props: { image }
	}));
}

const { image } = Astro.props;
const t = useTranslations('en');
const translatePath = useTranslatedPath('en');
const { date, specs, camera, lens, focalLength, aperture, shutterSpeed, iso, categories } = t.image;

const formatDate = (date: Date) => {
	return new Intl.DateTimeFormat('en-US', {
		year: 'numeric',
		month: 'long',
		day: 'numeric'
	}).format(date);
};
---

<Layout title={image.data.title}>
	<div class="max-w-6xl mx-auto px-4">
		<div class="mb-8">
			<a href={translatePath('/catalog')} class="text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300">
				‚Üê Back to catalog
			</a>
		</div>

		<div class="grid grid-cols-1">
			<div class="image-container mb-6">
				<Image 
					src={image.data.image} 
					alt={image.data.title} 
					width={800} 
					height={600} 
					class="w-full h-auto max-h-[80vh] object-contain"
				/>
			</div>

			<div class="image-info">
				<h1 class="text-3xl font-bold mb-4 text-black dark:text-white">{image.data.title}</h1>
				
				{image.data.description && (
					<div class="prose dark:prose-invert max-w-none">
						<p class="text-gray-700 dark:text-gray-300 leading-relaxed mb-4">{image.data.description}</p>
					</div>
				)}

				{image.data.date && (
					<div class="mb-4">
						<span class="font-semibold text-gray-700 dark:text-gray-300">{date}:</span>
						<span class="ml-2 text-gray-600 dark:text-gray-400">{formatDate(image.data.date)}</span>
					</div>
				)}

				{image.data.exif && (
					<div class="mb-6">
						<h2 class="text-xl font-semibold mb-3 text-black dark:text-white">{specs}</h2>
						<div class="grid grid-cols-1">
							{image.data.exif.model && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{camera}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">{image.data.exif.model}</span>
								</div>
							)}
							{image.data.exif.lens && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{lens}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">{image.data.exif.lens}</span>
								</div>
							)}
							{image.data.exif.focalLength && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{focalLength}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">{image.data.exif.focalLength}</span>
								</div>
							)}
							{image.data.exif.aperture && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{aperture}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">f/{image.data.exif.aperture}</span>
								</div>
							)}
							{image.data.exif.shutterSpeed && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{shutterSpeed}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">{image.data.exif.shutterSpeed}</span>
								</div>
							)}
							{image.data.exif.iso && (
								<div>
									<span class="font-medium text-gray-700 dark:text-gray-300">{iso}:</span>
									<span class="ml-2 text-gray-600 dark:text-gray-400">{image.data.exif.iso}</span>
								</div>
							)}
						</div>
					</div>
				)}

				{image.data.categories && image.data.categories.length > 0 && (
					<div class="mb-6">
						<h2 class="text-xl font-semibold mb-3 text-black dark:text-white">{categories}</h2>
						<div class="flex flex-wrap gap-2">
							{image.data.categories.map((category) => (
								<a href={translatePath(`/category/${category}`)} class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors">
									{category}
								</a>
							))}
						</div>
					</div>
				)}
			</div>
		</div>
	</div>
</Layout> 