---
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';
import LanguagePicker from '../components/LanguagePicker.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

export interface Props {
	title: string;
	description?: string;
}

const { title, description = "PhotoFer - Portafolio de Fotos" } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
const { catalog } = t.nav;
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<style is:inline>
			/* Dark mode by default */
			html {
				background-color: #18181b;
				color: #ffffff;
			}
		</style>
		<script is:inline>
			// Theme management with ViewTransitions support
			(function() {
				function enforceTheme() {
					// Check localStorage
					const saved = localStorage.getItem('theme');
					if (saved === 'light') {
						document.documentElement.classList.remove('dark');
						document.documentElement.classList.add('light');
					} else {
						// Default to dark mode
						document.documentElement.classList.add('dark');
						document.documentElement.classList.remove('light');
						localStorage.setItem('theme', 'dark');
					}
				}
				
				// Initial theme setup
				enforceTheme();
				
				// Toggle function
				window.toggleTheme = function() {
					const isDark = document.documentElement.classList.toggle('dark');
					document.documentElement.classList.toggle('light', !isDark);
					localStorage.setItem('theme', isDark ? 'dark' : 'light');
				};
				
				// Handle ViewTransitions
				document.addEventListener('astro:page-load', enforceTheme);
				document.addEventListener('astro:after-swap', enforceTheme);
			})();
		</script>
	</head>
	<body class="bg-white dark:bg-zinc-900 text-black dark:text-white min-h-screen">
		<header class="bg-white dark:bg-zinc-800 shadow-sm border-b border-gray-200 dark:border-zinc-700">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex justify-between items-center h-16">
					<div class="flex items-center space-x-8">
						<a href={translatePath('/')} class="text-xl font-bold text-black dark:text-white hover:text-gray-600 dark:hover:text-gray-300 transition-colors">
							PhotoFer
						</a>
						<nav class="hidden md:flex space-x-6">
							<a href={translatePath('/catalog')} class="text-gray-700 dark:text-gray-300 hover:text-black dark:hover:text-white transition-colors">
								{catalog}
							</a>
						</nav>
					</div>
					<div class="flex items-center space-x-4">
						<LanguagePicker />
						<ThemeToggle />
					</div>
				</div>
			</div>
		</header>

		<main class="container mx-auto px-4 py-8">
			<slot />
		</main>

		<footer class="bg-white dark:bg-zinc-800 border-t border-gray-200 dark:border-zinc-700 mt-auto">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<div class="text-center text-gray-600 dark:text-gray-400">
					<p>&copy; {new Date().getFullYear()} PhotoFer</p>
				</div>
			</div>
		</footer>
		
		<script is:inline>
			// Final theme enforcement
			(function() {
				// Force dark mode if not explicitly set to light
				const saved = localStorage.getItem('theme');
				if (saved !== 'light') {
					document.documentElement.classList.add('dark');
					document.documentElement.classList.remove('light');
					document.documentElement.setAttribute('data-theme', 'dark');
					localStorage.setItem('theme', 'dark');
				} else {
					document.documentElement.classList.remove('dark');
					document.documentElement.classList.add('light');
					document.documentElement.setAttribute('data-theme', 'light');
				}
			})();
		</script>
	</body>
</html>
